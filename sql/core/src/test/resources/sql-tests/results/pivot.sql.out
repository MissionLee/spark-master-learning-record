-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 13


-- !query 0
create temporary view courseSales as select * from values
  ("dotNET", 2012, 10000),
  ("Java", 2012, 20000),
  ("dotNET", 2012, 5000),
  ("dotNET", 2013, 48000),
  ("Java", 2013, 30000)
  as courseSales(course, year, earnings)
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
create temporary view years as select * from values
  (2012, 1),
  (2013, 2)
  as years(y, s)
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
SELECT * FROM (
  SELECT year, course, earnings FROM courseSales
)
PIVOT (
  sum(earnings)
  FOR course IN ('dotNET', 'Java')
)
-- !query 2 schema
struct<year:int,dotNET:bigint,Java:bigint>
-- !query 2 output
2012	15000	20000
2013	48000	30000


-- !query 3
SELECT * FROM courseSales
PIVOT (
  sum(earnings)
  FOR year IN (2012, 2013)
)
-- !query 3 schema
struct<course:string,2012:bigint,2013:bigint>
-- !query 3 output
Java	20000	30000
dotNET	15000	48000


-- !query 4
SELECT * FROM (
  SELECT year, course, earnings FROM courseSales
)
PIVOT (
  sum(earnings), avg(earnings)
  FOR course IN ('dotNET', 'Java')
)
-- !query 4 schema
struct<year:int,dotNET_sum(CAST(earnings AS BIGINT)):bigint,dotNET_avg(CAST(earnings AS BIGINT)):double,Java_sum(CAST(earnings AS BIGINT)):bigint,Java_avg(CAST(earnings AS BIGINT)):double>
-- !query 4 output
2012	15000	7500.0	20000	20000.0
2013	48000	48000.0	30000	30000.0


-- !query 5
SELECT * FROM (
  SELECT course, earnings FROM courseSales
)
PIVOT (
  sum(earnings)
  FOR course IN ('dotNET', 'Java')
)
-- !query 5 schema
struct<dotNET:bigint,Java:bigint>
-- !query 5 output
63000	50000


-- !query 6
SELECT * FROM (
  SELECT year, course, earnings FROM courseSales
)
PIVOT (
  sum(earnings), min(year)
  FOR course IN ('dotNET', 'Java')
)
-- !query 6 schema
struct<dotNET_sum(CAST(earnings AS BIGINT)):bigint,dotNET_min(year):int,Java_sum(CAST(earnings AS BIGINT)):bigint,Java_min(year):int>
-- !query 6 output
63000	2012	50000	2012


-- !query 7
SELECT * FROM (
  SELECT course, year, earnings, s
  FROM courseSales
  JOIN years ON year = y
)
PIVOT (
  sum(earnings)
  FOR s IN (1, 2)
)
-- !query 7 schema
struct<course:string,year:int,1:bigint,2:bigint>
-- !query 7 output
Java	2012	20000	NULL
Java	2013	NULL	30000
dotNET	2012	15000	NULL
dotNET	2013	NULL	48000


-- !query 8
SELECT * FROM (
  SELECT course, year, earnings, s
  FROM courseSales
  JOIN years ON year = y
)
PIVOT (
  sum(earnings), min(s)
  FOR course IN ('dotNET', 'Java')
)
-- !query 8 schema
struct<year:int,dotNET_sum(CAST(earnings AS BIGINT)):bigint,dotNET_min(s):int,Java_sum(CAST(earnings AS BIGINT)):bigint,Java_min(s):int>
-- !query 8 output
2012	15000	1	20000	1
2013	48000	2	30000	2


-- !query 9
SELECT * FROM (
  SELECT course, year, earnings, s
  FROM courseSales
  JOIN years ON year = y
)
PIVOT (
  sum(earnings * s)
  FOR course IN ('dotNET', 'Java')
)
-- !query 9 schema
struct<year:int,dotNET:bigint,Java:bigint>
-- !query 9 output
2012	15000	20000
2013	96000	60000


-- !query 10
SELECT 2012_s, 2013_s, 2012_a, 2013_a, c FROM (
  SELECT year y, course c, earnings e FROM courseSales
)
PIVOT (
  sum(e) s, avg(e) a
  FOR y IN (2012, 2013)
)
-- !query 10 schema
struct<2012_s:bigint,2013_s:bigint,2012_a:double,2013_a:double,c:string>
-- !query 10 output
15000	48000	7500.0	48000.0	dotNET
20000	30000	20000.0	30000.0	Java


-- !query 11
SELECT * FROM courseSales
PIVOT (
  abs(earnings)
  FOR year IN (2012, 2013)
)
-- !query 11 schema
struct<>
-- !query 11 output
org.apache.spark.sql.AnalysisException
Aggregate expression required for pivot, found 'abs(earnings#x)';


-- !query 12
SELECT * FROM (
  SELECT course, earnings FROM courseSales
)
PIVOT (
  sum(earnings)
  FOR year IN (2012, 2013)
)
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.AnalysisException
cannot resolve '`year`' given input columns: [__auto_generated_subquery_name.course, __auto_generated_subquery_name.earnings]; line 4 pos 0
